<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.novaborn.takeaway.order.dao.IOrderDao">

    <select id="getById" resultType="Order">
        SELECT * FROM `order`
        <where>
            `id` = #{orderId}
            <if test="!isShowDeleted">
                AND deleted = 0
            </if>
        </where>
    </select>


    <select id="getOrderListByUserId" resultType="Order">
        SELECT * FROM `order`
        <where>
            `user_id` = #{userId}
            <if test="paymentWay != null">
                AND `payment_way` = #{paymentWay}
            </if>
            <if test="orderState != null">
                AND `order_state` = #{orderState}
            </if>
            <if test="!isShowDeleted">
                AND deleted = 0
            </if>
        </where>
    </select>

    <select id="getOrderListByPage" resultType="Order">
        SELECT * FROM `order`
        <where>
            <if test="args.userIds != null">
                `user_id` IN
                <foreach collection="args.userIds" item="id" separator="," open="(" close=")">
                    #{id}
                </foreach>
            </if>
            <if test="args.orderId != null and args.orderId != ''">
                AND `id` = #{args.orderId}
            </if>
            <if test="args.number != null and args.number != ''">
                AND `number` = #{args.number}
            </if>
            <if test="args.paymentWay != null and args.paymentWay != ''">
                AND `payment_way` = #{args.paymentWay}
            </if>
            <if test="args.orderState != null and args.orderState != ''">
                AND `order_state` = #{args.orderState}
            </if>
            <if test="args.startDate !=null and args.startDate != '' and args.endDate != null and args.endDate != ''">
                AND `create_date` BETWEEN #{args.startDate} AND DATE_ADD(#{args.endDate},INTERVAL 1 DAY)
            </if>
            <if test="args.showDelete == 0">
                AND deleted = 0
            </if>
        </where>
        ORDER BY `create_date` DESC
    </select>

    <sql id="common_get_waiting_receive_order">
        <where>
            `pay_state` &lt;&gt; 0
            AND `order_state` = 0
            AND deleted = 0
        </where>
    </sql>

    <select id="getWaitingReceiveOrder" resultType="Order">
        SELECT * FROM `order`
        <include refid="common_get_waiting_receive_order"/>
        ORDER BY `create_date` DESC
    </select>

    <select id="getWaitingReceiveOrderCount" resultType="java.lang.Integer">
        SELECT count(*) FROM `order`
        <include refid="common_get_waiting_receive_order"/>
    </select>

    <sql id="common_order_list_where_u">
        <if test="userId != null and userId != ''">
            `user_id` = #{userId}
        </if>

        <if test="orderState != null">
            <if test="orderState == @net.novaborn.takeaway.order.enums.OrderStateEx@WAIT_PAY">
                AND `pay_state` = 0 AND `order_state` &lt;&gt; 5
            </if>
            <if test="orderState == @net.novaborn.takeaway.order.enums.OrderStateEx@WAIT_EAT">
                AND (`order_state` = 0 or `order_state` = 1 or `order_state` = 2)
                AND (`pay_state` = 1 or `pay_state` = 2)
            </if>
            <if test="orderState == @net.novaborn.takeaway.order.enums.OrderStateEx@WAIT_COMMENT">
                AND `is_commented` = 0 AND `order_state` = 3
            </if>
            <if test="orderState == @net.novaborn.takeaway.order.enums.OrderStateEx@REFUND">
                AND `order_state` = 4
            </if>
        </if>
        AND deleted = 0
    </sql>

    <select id="getOrderListByPageU" resultType="Order">
        SELECT * FROM `order`
        <where>
            <include refid="common_order_list_where_u"/>
        </where>
        ORDER BY `create_date` DESC
    </select>


    <select id="getOrderCountByStateU" resultType="java.lang.Integer">
        SELECT count(*) FROM `order`
        <where>
            <include refid="common_order_list_where_u"/>
        </where>
    </select>

    <select id="getTodayOrderCountByStateU" resultType="java.lang.Integer">
        SELECT count(*) FROM `order`
        <where>
            <include refid="common_order_list_where_u"/>
            AND TO_DAYS(create_date) = TO_DAYS(NOW())
        </where>
    </select>

    <select id="getOrderCountToday" resultType="java.lang.Integer">
        SELECT count(*) FROM `order`
        <where>
            TO_DAYS(`create_date`) = TO_DAYS(now())
        </where>
    </select>
</mapper>